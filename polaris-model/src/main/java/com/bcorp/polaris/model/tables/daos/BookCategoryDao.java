/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.daos;


import com.bcorp.polaris.model.tables.BookCategory;
import com.bcorp.polaris.model.tables.records.BookCategoryRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class BookCategoryDao extends DAOImpl<BookCategoryRecord, com.bcorp.polaris.model.tables.pojos.BookCategory, ULong> {

    /**
     * Create a new BookCategoryDao without any configuration
     */
    public BookCategoryDao() {
        super(BookCategory.BOOK_CATEGORY, com.bcorp.polaris.model.tables.pojos.BookCategory.class);
    }

    /**
     * Create a new BookCategoryDao with an attached configuration
     */
    @Autowired
    public BookCategoryDao(Configuration configuration) {
        super(BookCategory.BOOK_CATEGORY, com.bcorp.polaris.model.tables.pojos.BookCategory.class, configuration);
    }

    @Override
    public ULong getId(com.bcorp.polaris.model.tables.pojos.BookCategory object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(BookCategory.BOOK_CATEGORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchById(ULong... values) {
        return fetch(BookCategory.BOOK_CATEGORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bcorp.polaris.model.tables.pojos.BookCategory fetchOneById(ULong value) {
        return fetchOne(BookCategory.BOOK_CATEGORY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchOptionalById(ULong value) {
        return fetchOptional(BookCategory.BOOK_CATEGORY.ID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(BookCategory.BOOK_CATEGORY.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchByTitle(String... values) {
        return fetch(BookCategory.BOOK_CATEGORY.TITLE, values);
    }

    /**
     * Fetch records that have <code>sort_position BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchRangeOfSortPosition(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BookCategory.BOOK_CATEGORY.SORT_POSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sort_position IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchBySortPosition(Integer... values) {
        return fetch(BookCategory.BOOK_CATEGORY.SORT_POSITION, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchRangeOfIsDeleted(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(BookCategory.BOOK_CATEGORY.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchByIsDeleted(UByte... values) {
        return fetch(BookCategory.BOOK_CATEGORY.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BookCategory.BOOK_CATEGORY.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(BookCategory.BOOK_CATEGORY.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BookCategory.BOOK_CATEGORY.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookCategory> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(BookCategory.BOOK_CATEGORY.UPDATED_AT, values);
    }
}
