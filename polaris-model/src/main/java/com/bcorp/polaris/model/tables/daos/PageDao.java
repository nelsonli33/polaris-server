/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.daos;


import com.bcorp.polaris.model.tables.Page;
import com.bcorp.polaris.model.tables.records.PageRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PageDao extends DAOImpl<PageRecord, com.bcorp.polaris.model.tables.pojos.Page, ULong> {

    /**
     * Create a new PageDao without any configuration
     */
    public PageDao() {
        super(Page.PAGE, com.bcorp.polaris.model.tables.pojos.Page.class);
    }

    /**
     * Create a new PageDao with an attached configuration
     */
    @Autowired
    public PageDao(Configuration configuration) {
        super(Page.PAGE, com.bcorp.polaris.model.tables.pojos.Page.class, configuration);
    }

    @Override
    public ULong getId(com.bcorp.polaris.model.tables.pojos.Page object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Page.PAGE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchById(ULong... values) {
        return fetch(Page.PAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bcorp.polaris.model.tables.pojos.Page fetchOneById(ULong value) {
        return fetchOne(Page.PAGE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bcorp.polaris.model.tables.pojos.Page> fetchOptionalById(ULong value) {
        return fetchOptional(Page.PAGE.ID, value);
    }

    /**
     * Fetch records that have <code>chapter_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfChapterId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Page.PAGE.CHAPTER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>chapter_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchByChapterId(ULong... values) {
        return fetch(Page.PAGE.CHAPTER_ID, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Page.PAGE.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchByTitle(String... values) {
        return fetch(Page.PAGE.TITLE, values);
    }

    /**
     * Fetch records that have <code>body BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfBody(String lowerInclusive, String upperInclusive) {
        return fetchRange(Page.PAGE.BODY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>body IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchByBody(String... values) {
        return fetch(Page.PAGE.BODY, values);
    }

    /**
     * Fetch records that have <code>character_count BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfCharacterCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Page.PAGE.CHARACTER_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>character_count IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchByCharacterCount(Integer... values) {
        return fetch(Page.PAGE.CHARACTER_COUNT, values);
    }

    /**
     * Fetch records that have <code>sort_position BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfSortPosition(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Page.PAGE.SORT_POSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sort_position IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchBySortPosition(Integer... values) {
        return fetch(Page.PAGE.SORT_POSITION, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfIsDeleted(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(Page.PAGE.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchByIsDeleted(UByte... values) {
        return fetch(Page.PAGE.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Page.PAGE.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Page.PAGE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Page.PAGE.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Page> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Page.PAGE.UPDATED_AT, values);
    }
}
