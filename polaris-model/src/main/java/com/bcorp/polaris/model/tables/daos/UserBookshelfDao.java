/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.daos;


import com.bcorp.polaris.model.tables.UserBookshelf;
import com.bcorp.polaris.model.tables.records.UserBookshelfRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserBookshelfDao extends DAOImpl<UserBookshelfRecord, com.bcorp.polaris.model.tables.pojos.UserBookshelf, ULong> {

    /**
     * Create a new UserBookshelfDao without any configuration
     */
    public UserBookshelfDao() {
        super(UserBookshelf.USER_BOOKSHELF, com.bcorp.polaris.model.tables.pojos.UserBookshelf.class);
    }

    /**
     * Create a new UserBookshelfDao with an attached configuration
     */
    @Autowired
    public UserBookshelfDao(Configuration configuration) {
        super(UserBookshelf.USER_BOOKSHELF, com.bcorp.polaris.model.tables.pojos.UserBookshelf.class, configuration);
    }

    @Override
    public ULong getId(com.bcorp.polaris.model.tables.pojos.UserBookshelf object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserBookshelf.USER_BOOKSHELF.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchById(ULong... values) {
        return fetch(UserBookshelf.USER_BOOKSHELF.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bcorp.polaris.model.tables.pojos.UserBookshelf fetchOneById(ULong value) {
        return fetchOne(UserBookshelf.USER_BOOKSHELF.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchOptionalById(ULong value) {
        return fetchOptional(UserBookshelf.USER_BOOKSHELF.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchRangeOfUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserBookshelf.USER_BOOKSHELF.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchByUserId(ULong... values) {
        return fetch(UserBookshelf.USER_BOOKSHELF.USER_ID, values);
    }

    /**
     * Fetch records that have <code>book_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchRangeOfBookId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserBookshelf.USER_BOOKSHELF.BOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchByBookId(ULong... values) {
        return fetch(UserBookshelf.USER_BOOKSHELF.BOOK_ID, values);
    }

    /**
     * Fetch records that have <code>last_chapter_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchRangeOfLastChapterId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserBookshelf.USER_BOOKSHELF.LAST_CHAPTER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_chapter_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchByLastChapterId(ULong... values) {
        return fetch(UserBookshelf.USER_BOOKSHELF.LAST_CHAPTER_ID, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchRangeOfIsDeleted(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(UserBookshelf.USER_BOOKSHELF.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchByIsDeleted(UByte... values) {
        return fetch(UserBookshelf.USER_BOOKSHELF.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserBookshelf.USER_BOOKSHELF.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(UserBookshelf.USER_BOOKSHELF.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserBookshelf.USER_BOOKSHELF.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.UserBookshelf> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(UserBookshelf.USER_BOOKSHELF.UPDATED_AT, values);
    }
}
