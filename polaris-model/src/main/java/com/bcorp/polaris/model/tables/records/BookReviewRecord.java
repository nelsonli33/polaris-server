/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.records;


import com.bcorp.polaris.model.tables.BookReview;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookReviewRecord extends UpdatableRecordImpl<BookReviewRecord> implements Record8<ULong, String, ULong, ULong, UByte, UByte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>polaris-db.book_review.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>polaris-db.book_review.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>polaris-db.book_review.comment</code>. 留言內容
     */
    public void setComment(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>polaris-db.book_review.comment</code>. 留言內容
     */
    public String getComment() {
        return (String) get(1);
    }

    /**
     * Setter for <code>polaris-db.book_review.user_id</code>. 使用者 id
     */
    public void setUserId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>polaris-db.book_review.user_id</code>. 使用者 id
     */
    public ULong getUserId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>polaris-db.book_review.book_id</code>. 書本   id
     */
    public void setBookId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>polaris-db.book_review.book_id</code>. 書本   id
     */
    public ULong getBookId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>polaris-db.book_review.rating_star</code>. 評分 0 ~ 5
     */
    public void setRatingStar(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>polaris-db.book_review.rating_star</code>. 評分 0 ~ 5
     */
    public UByte getRatingStar() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>polaris-db.book_review.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public void setIsDeleted(UByte value) {
        set(5, value);
    }

    /**
     * Getter for <code>polaris-db.book_review.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public UByte getIsDeleted() {
        return (UByte) get(5);
    }

    /**
     * Setter for <code>polaris-db.book_review.created_at</code>. 建立時間
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>polaris-db.book_review.created_at</code>. 建立時間
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>polaris-db.book_review.updated_at</code>. 修改時間
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>polaris-db.book_review.updated_at</code>. 修改時間
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, String, ULong, ULong, UByte, UByte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<ULong, String, ULong, ULong, UByte, UByte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return BookReview.BOOK_REVIEW.ID;
    }

    @Override
    public Field<String> field2() {
        return BookReview.BOOK_REVIEW.COMMENT;
    }

    @Override
    public Field<ULong> field3() {
        return BookReview.BOOK_REVIEW.USER_ID;
    }

    @Override
    public Field<ULong> field4() {
        return BookReview.BOOK_REVIEW.BOOK_ID;
    }

    @Override
    public Field<UByte> field5() {
        return BookReview.BOOK_REVIEW.RATING_STAR;
    }

    @Override
    public Field<UByte> field6() {
        return BookReview.BOOK_REVIEW.IS_DELETED;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return BookReview.BOOK_REVIEW.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return BookReview.BOOK_REVIEW.UPDATED_AT;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getComment();
    }

    @Override
    public ULong component3() {
        return getUserId();
    }

    @Override
    public ULong component4() {
        return getBookId();
    }

    @Override
    public UByte component5() {
        return getRatingStar();
    }

    @Override
    public UByte component6() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getComment();
    }

    @Override
    public ULong value3() {
        return getUserId();
    }

    @Override
    public ULong value4() {
        return getBookId();
    }

    @Override
    public UByte value5() {
        return getRatingStar();
    }

    @Override
    public UByte value6() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public BookReviewRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public BookReviewRecord value2(String value) {
        setComment(value);
        return this;
    }

    @Override
    public BookReviewRecord value3(ULong value) {
        setUserId(value);
        return this;
    }

    @Override
    public BookReviewRecord value4(ULong value) {
        setBookId(value);
        return this;
    }

    @Override
    public BookReviewRecord value5(UByte value) {
        setRatingStar(value);
        return this;
    }

    @Override
    public BookReviewRecord value6(UByte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public BookReviewRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BookReviewRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public BookReviewRecord values(ULong value1, String value2, ULong value3, ULong value4, UByte value5, UByte value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookReviewRecord
     */
    public BookReviewRecord() {
        super(BookReview.BOOK_REVIEW);
    }

    /**
     * Create a detached, initialised BookReviewRecord
     */
    public BookReviewRecord(ULong id, String comment, ULong userId, ULong bookId, UByte ratingStar, UByte isDeleted, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(BookReview.BOOK_REVIEW);

        setId(id);
        setComment(comment);
        setUserId(userId);
        setBookId(bookId);
        setRatingStar(ratingStar);
        setIsDeleted(isDeleted);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
