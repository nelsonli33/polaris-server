/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.daos;


import com.bcorp.polaris.model.tables.BookReview;
import com.bcorp.polaris.model.tables.records.BookReviewRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class BookReviewDao extends DAOImpl<BookReviewRecord, com.bcorp.polaris.model.tables.pojos.BookReview, ULong> {

    /**
     * Create a new BookReviewDao without any configuration
     */
    public BookReviewDao() {
        super(BookReview.BOOK_REVIEW, com.bcorp.polaris.model.tables.pojos.BookReview.class);
    }

    /**
     * Create a new BookReviewDao with an attached configuration
     */
    @Autowired
    public BookReviewDao(Configuration configuration) {
        super(BookReview.BOOK_REVIEW, com.bcorp.polaris.model.tables.pojos.BookReview.class, configuration);
    }

    @Override
    public ULong getId(com.bcorp.polaris.model.tables.pojos.BookReview object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(BookReview.BOOK_REVIEW.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchById(ULong... values) {
        return fetch(BookReview.BOOK_REVIEW.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bcorp.polaris.model.tables.pojos.BookReview fetchOneById(ULong value) {
        return fetchOne(BookReview.BOOK_REVIEW.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bcorp.polaris.model.tables.pojos.BookReview> fetchOptionalById(ULong value) {
        return fetchOptional(BookReview.BOOK_REVIEW.ID, value);
    }

    /**
     * Fetch records that have <code>comment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchRangeOfComment(String lowerInclusive, String upperInclusive) {
        return fetchRange(BookReview.BOOK_REVIEW.COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchByComment(String... values) {
        return fetch(BookReview.BOOK_REVIEW.COMMENT, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchRangeOfUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(BookReview.BOOK_REVIEW.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchByUserId(ULong... values) {
        return fetch(BookReview.BOOK_REVIEW.USER_ID, values);
    }

    /**
     * Fetch records that have <code>book_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchRangeOfBookId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(BookReview.BOOK_REVIEW.BOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchByBookId(ULong... values) {
        return fetch(BookReview.BOOK_REVIEW.BOOK_ID, values);
    }

    /**
     * Fetch records that have <code>rating_star BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchRangeOfRatingStar(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(BookReview.BOOK_REVIEW.RATING_STAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rating_star IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchByRatingStar(UByte... values) {
        return fetch(BookReview.BOOK_REVIEW.RATING_STAR, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchRangeOfIsDeleted(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(BookReview.BOOK_REVIEW.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchByIsDeleted(UByte... values) {
        return fetch(BookReview.BOOK_REVIEW.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BookReview.BOOK_REVIEW.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(BookReview.BOOK_REVIEW.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BookReview.BOOK_REVIEW.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.BookReview> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(BookReview.BOOK_REVIEW.UPDATED_AT, values);
    }
}
