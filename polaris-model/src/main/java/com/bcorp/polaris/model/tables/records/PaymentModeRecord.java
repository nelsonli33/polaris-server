/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.records;


import com.bcorp.polaris.model.tables.PaymentMode;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentModeRecord extends UpdatableRecordImpl<PaymentModeRecord> implements Record7<ULong, String, String, UByte, UByte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>polaris-db.payment_mode.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>polaris-db.payment_mode.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>polaris-db.payment_mode.code</code>. 付款識別子
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>polaris-db.payment_mode.code</code>. 付款識別子
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>polaris-db.payment_mode.description</code>. 付款方式描述
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>polaris-db.payment_mode.description</code>. 付款方式描述
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>polaris-db.payment_mode.is_active</code>.
     * 是否啟用，0-未啟用，1-啟用，預設為 1
     */
    public void setIsActive(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>polaris-db.payment_mode.is_active</code>.
     * 是否啟用，0-未啟用，1-啟用，預設為 1
     */
    public UByte getIsActive() {
        return (UByte) get(3);
    }

    /**
     * Setter for <code>polaris-db.payment_mode.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public void setIsDeleted(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>polaris-db.payment_mode.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public UByte getIsDeleted() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>polaris-db.payment_mode.created_at</code>. 建立時間
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>polaris-db.payment_mode.created_at</code>. 建立時間
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>polaris-db.payment_mode.updated_at</code>. 修改時間
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>polaris-db.payment_mode.updated_at</code>. 修改時間
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, String, String, UByte, UByte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, String, String, UByte, UByte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return PaymentMode.PAYMENT_MODE.ID;
    }

    @Override
    public Field<String> field2() {
        return PaymentMode.PAYMENT_MODE.CODE;
    }

    @Override
    public Field<String> field3() {
        return PaymentMode.PAYMENT_MODE.DESCRIPTION;
    }

    @Override
    public Field<UByte> field4() {
        return PaymentMode.PAYMENT_MODE.IS_ACTIVE;
    }

    @Override
    public Field<UByte> field5() {
        return PaymentMode.PAYMENT_MODE.IS_DELETED;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return PaymentMode.PAYMENT_MODE.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return PaymentMode.PAYMENT_MODE.UPDATED_AT;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public UByte component4() {
        return getIsActive();
    }

    @Override
    public UByte component5() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public UByte value4() {
        return getIsActive();
    }

    @Override
    public UByte value5() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public PaymentModeRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public PaymentModeRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public PaymentModeRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public PaymentModeRecord value4(UByte value) {
        setIsActive(value);
        return this;
    }

    @Override
    public PaymentModeRecord value5(UByte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public PaymentModeRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PaymentModeRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PaymentModeRecord values(ULong value1, String value2, String value3, UByte value4, UByte value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentModeRecord
     */
    public PaymentModeRecord() {
        super(PaymentMode.PAYMENT_MODE);
    }

    /**
     * Create a detached, initialised PaymentModeRecord
     */
    public PaymentModeRecord(ULong id, String code, String description, UByte isActive, UByte isDeleted, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(PaymentMode.PAYMENT_MODE);

        setId(id);
        setCode(code);
        setDescription(description);
        setIsActive(isActive);
        setIsDeleted(isDeleted);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }

    /**
     * Create a detached, initialised PaymentModeRecord
     */
    public PaymentModeRecord(com.bcorp.polaris.model.tables.pojos.PaymentMode value) {
        super(PaymentMode.PAYMENT_MODE);

        if (value != null) {
            setId(value.getId());
            setCode(value.getCode());
            setDescription(value.getDescription());
            setIsActive(value.getIsActive());
            setIsDeleted(value.getIsDeleted());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
        }
    }
}
