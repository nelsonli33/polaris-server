/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.daos;


import com.bcorp.polaris.model.tables.Cart;
import com.bcorp.polaris.model.tables.records.CartRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CartDao extends DAOImpl<CartRecord, com.bcorp.polaris.model.tables.pojos.Cart, ULong> {

    /**
     * Create a new CartDao without any configuration
     */
    public CartDao() {
        super(Cart.CART, com.bcorp.polaris.model.tables.pojos.Cart.class);
    }

    /**
     * Create a new CartDao with an attached configuration
     */
    @Autowired
    public CartDao(Configuration configuration) {
        super(Cart.CART, com.bcorp.polaris.model.tables.pojos.Cart.class, configuration);
    }

    @Override
    public ULong getId(com.bcorp.polaris.model.tables.pojos.Cart object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Cart.CART.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchById(ULong... values) {
        return fetch(Cart.CART.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bcorp.polaris.model.tables.pojos.Cart fetchOneById(ULong value) {
        return fetchOne(Cart.CART.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bcorp.polaris.model.tables.pojos.Cart> fetchOptionalById(ULong value) {
        return fetchOptional(Cart.CART.ID, value);
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Cart.CART.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchByCode(String... values) {
        return fetch(Cart.CART.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public com.bcorp.polaris.model.tables.pojos.Cart fetchOneByCode(String value) {
        return fetchOne(Cart.CART.CODE, value);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public Optional<com.bcorp.polaris.model.tables.pojos.Cart> fetchOptionalByCode(String value) {
        return fetchOptional(Cart.CART.CODE, value);
    }

    /**
     * Fetch records that have <code>subtotal BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchRangeOfSubtotal(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Cart.CART.SUBTOTAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subtotal IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchBySubtotal(BigDecimal... values) {
        return fetch(Cart.CART.SUBTOTAL, values);
    }

    /**
     * Fetch records that have <code>total_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchRangeOfTotalPrice(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Cart.CART.TOTAL_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_price IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchByTotalPrice(BigDecimal... values) {
        return fetch(Cart.CART.TOTAL_PRICE, values);
    }

    /**
     * Fetch records that have <code>total_discounts BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchRangeOfTotalDiscounts(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Cart.CART.TOTAL_DISCOUNTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_discounts IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchByTotalDiscounts(BigDecimal... values) {
        return fetch(Cart.CART.TOTAL_DISCOUNTS, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchRangeOfUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Cart.CART.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchByUserId(ULong... values) {
        return fetch(Cart.CART.USER_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Cart.CART.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Cart.CART.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Cart.CART.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Cart> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Cart.CART.UPDATED_AT, values);
    }
}
