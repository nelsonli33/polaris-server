/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.daos;


import com.bcorp.polaris.model.tables.Order;
import com.bcorp.polaris.model.tables.records.OrderRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OrderDao extends DAOImpl<OrderRecord, com.bcorp.polaris.model.tables.pojos.Order, ULong> {

    /**
     * Create a new OrderDao without any configuration
     */
    public OrderDao() {
        super(Order.ORDER, com.bcorp.polaris.model.tables.pojos.Order.class);
    }

    /**
     * Create a new OrderDao with an attached configuration
     */
    @Autowired
    public OrderDao(Configuration configuration) {
        super(Order.ORDER, com.bcorp.polaris.model.tables.pojos.Order.class, configuration);
    }

    @Override
    public ULong getId(com.bcorp.polaris.model.tables.pojos.Order object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Order.ORDER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchById(ULong... values) {
        return fetch(Order.ORDER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bcorp.polaris.model.tables.pojos.Order fetchOneById(ULong value) {
        return fetchOne(Order.ORDER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.bcorp.polaris.model.tables.pojos.Order> fetchOptionalById(ULong value) {
        return fetchOptional(Order.ORDER.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Order.ORDER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByUserId(ULong... values) {
        return fetch(Order.ORDER.USER_ID, values);
    }

    /**
     * Fetch records that have <code>invoice_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfInvoiceId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Order.ORDER.INVOICE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>invoice_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByInvoiceId(ULong... values) {
        return fetch(Order.ORDER.INVOICE_ID, values);
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Order.ORDER.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByCode(String... values) {
        return fetch(Order.ORDER.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public com.bcorp.polaris.model.tables.pojos.Order fetchOneByCode(String value) {
        return fetchOne(Order.ORDER.CODE, value);
    }

    /**
     * Fetch a unique record that has <code>code = value</code>
     */
    public Optional<com.bcorp.polaris.model.tables.pojos.Order> fetchOptionalByCode(String value) {
        return fetchOptional(Order.ORDER.CODE, value);
    }

    /**
     * Fetch records that have <code>order_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfOrderStatus(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(Order.ORDER.ORDER_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_status IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByOrderStatus(UByte... values) {
        return fetch(Order.ORDER.ORDER_STATUS, values);
    }

    /**
     * Fetch records that have <code>subtotal BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfSubtotal(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Order.ORDER.SUBTOTAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subtotal IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchBySubtotal(BigDecimal... values) {
        return fetch(Order.ORDER.SUBTOTAL, values);
    }

    /**
     * Fetch records that have <code>total_discounts BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfTotalDiscounts(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Order.ORDER.TOTAL_DISCOUNTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_discounts IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByTotalDiscounts(BigDecimal... values) {
        return fetch(Order.ORDER.TOTAL_DISCOUNTS, values);
    }

    /**
     * Fetch records that have <code>total_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfTotalPrice(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Order.ORDER.TOTAL_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_price IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByTotalPrice(BigDecimal... values) {
        return fetch(Order.ORDER.TOTAL_PRICE, values);
    }

    /**
     * Fetch records that have <code>payment_mode_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfPaymentModeId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Order.ORDER.PAYMENT_MODE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_mode_id IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByPaymentModeId(ULong... values) {
        return fetch(Order.ORDER.PAYMENT_MODE_ID, values);
    }

    /**
     * Fetch records that have <code>payment_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfPaymentStatus(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(Order.ORDER.PAYMENT_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_status IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByPaymentStatus(UByte... values) {
        return fetch(Order.ORDER.PAYMENT_STATUS, values);
    }

    /**
     * Fetch records that have <code>pay_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfPayAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.PAY_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pay_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByPayAt(LocalDateTime... values) {
        return fetch(Order.ORDER.PAY_AT, values);
    }

    /**
     * Fetch records that have <code>complete_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfCompleteAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.COMPLETE_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>complete_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByCompleteAt(LocalDateTime... values) {
        return fetch(Order.ORDER.COMPLETE_AT, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfIsDeleted(UByte lowerInclusive, UByte upperInclusive) {
        return fetchRange(Order.ORDER.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByIsDeleted(UByte... values) {
        return fetch(Order.ORDER.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Order.ORDER.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Order.ORDER.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bcorp.polaris.model.tables.pojos.Order> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Order.ORDER.UPDATED_AT, values);
    }
}
