/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables;


import com.bcorp.polaris.core.model.Keys;
import com.bcorp.polaris.core.model.PolarisDb;
import com.bcorp.polaris.core.model.tables.records.BookCategoryRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class BookCategory extends TableImpl<BookCategoryRecord>
{

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>polaris-db.book_category</code>
     */
    public static final BookCategory BOOK_CATEGORY = new BookCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookCategoryRecord> getRecordType()
    {
        return BookCategoryRecord.class;
    }

    /**
     * The column <code>polaris-db.book_category.id</code>.
     */
    public final TableField<BookCategoryRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>polaris-db.book_category.title</code>. 書本分類名稱
     */
    public final TableField<BookCategoryRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "書本分類名稱");

    /**
     * The column <code>polaris-db.book_category.sort_position</code>. 排序位置
     */
    public final TableField<BookCategoryRecord, Integer> SORT_POSITION = createField(DSL.name("sort_position"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "排序位置");

    /**
     * The column <code>polaris-db.book_category.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public final TableField<BookCategoryRecord, UByte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "是否刪除，0-未刪除，1-刪除，預設為 0");

    /**
     * The column <code>polaris-db.book_category.created_at</code>. 建立時間
     */
    public final TableField<BookCategoryRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "建立時間");

    /**
     * The column <code>polaris-db.book_category.updated_at</code>. 修改時間
     */
    public final TableField<BookCategoryRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "修改時間");

    private BookCategory(Name alias, Table<BookCategoryRecord> aliased)
    {
        this(alias, aliased, null);
    }

    private BookCategory(Name alias, Table<BookCategoryRecord> aliased, Field<?>[] parameters)
    {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>polaris-db.book_category</code> table reference
     */
    public BookCategory(String alias)
    {
        this(DSL.name(alias), BOOK_CATEGORY);
    }

    /**
     * Create an aliased <code>polaris-db.book_category</code> table reference
     */
    public BookCategory(Name alias)
    {
        this(alias, BOOK_CATEGORY);
    }

    /**
     * Create a <code>polaris-db.book_category</code> table reference
     */
    public BookCategory()
    {
        this(DSL.name("book_category"), null);
    }

    public <O extends Record> BookCategory(Table<O> child, ForeignKey<O, BookCategoryRecord> key)
    {
        super(child, key, BOOK_CATEGORY);
    }

    @Override
    public Schema getSchema()
    {
        return aliased() ? null : PolarisDb.POLARIS_DB;
    }

    @Override
    public Identity<BookCategoryRecord, ULong> getIdentity()
    {
        return (Identity<BookCategoryRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<BookCategoryRecord> getPrimaryKey()
    {
        return Keys.KEY_BOOK_CATEGORY_PRIMARY;
    }

    @Override
    public BookCategory as(String alias)
    {
        return new BookCategory(DSL.name(alias), this);
    }

    @Override
    public BookCategory as(Name alias)
    {
        return new BookCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BookCategory rename(String name)
    {
        return new BookCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BookCategory rename(Name name)
    {
        return new BookCategory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<ULong, String, Integer, UByte, LocalDateTime, LocalDateTime> fieldsRow()
    {
        return (Row6) super.fieldsRow();
    }
}
