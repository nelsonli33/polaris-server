/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables.records;


import com.bcorp.polaris.core.model.tables.Book;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record15<Long, Long, String, String, Byte, BigDecimal, String, String, String, LocalDateTime, Byte, Integer, Byte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>polaris-db.book.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>polaris-db.book.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>polaris-db.book.user_id</code>. User(Author) id
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>polaris-db.book.user_id</code>. User(Author) id
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>polaris-db.book.title</code>. 書本標題
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>polaris-db.book.title</code>. 書本標題
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>polaris-db.book.subtitle</code>. 書本副標題
     */
    public void setSubtitle(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>polaris-db.book.subtitle</code>. 書本副標題
     */
    public String getSubtitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>polaris-db.book.price_type</code>. 免費or付費閱讀，1-免費,
     * 2-付費，預設為 2
     */
    public void setPriceType(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>polaris-db.book.price_type</code>. 免費or付費閱讀，1-免費,
     * 2-付費，預設為 2
     */
    public Byte getPriceType() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>polaris-db.book.price</code>. 書本售價
     */
    public void setPrice(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>polaris-db.book.price</code>. 書本售價
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>polaris-db.book.synopsis</code>. 書本簡介
     */
    public void setSynopsis(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>polaris-db.book.synopsis</code>. 書本簡介
     */
    public String getSynopsis() {
        return (String) get(6);
    }

    /**
     * Setter for <code>polaris-db.book.acquisition</code>. 你能學到
     */
    public void setAcquisition(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>polaris-db.book.acquisition</code>. 你能學到
     */
    public String getAcquisition() {
        return (String) get(7);
    }

    /**
     * Setter for <code>polaris-db.book.cover</code>. 書封
     */
    public void setCover(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>polaris-db.book.cover</code>. 書封
     */
    public String getCover() {
        return (String) get(8);
    }

    /**
     * Setter for <code>polaris-db.book.published_at</code>. 出版日期
     */
    public void setPublishedAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>polaris-db.book.published_at</code>. 出版日期
     */
    public LocalDateTime getPublishedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>polaris-db.book.status</code>. 上架狀態，0-未上架，1-已上架，預設為 0
     */
    public void setStatus(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>polaris-db.book.status</code>. 上架狀態，0-未上架，1-已上架，預設為 0
     */
    public Byte getStatus() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>polaris-db.book.character_count</code>. 總字數
     */
    public void setCharacterCount(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>polaris-db.book.character_count</code>. 總字數
     */
    public Integer getCharacterCount() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>polaris-db.book.is_deleted</code>. 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public void setIsDeleted(Byte value) {
        set(12, value);
    }

    /**
     * Getter for <code>polaris-db.book.is_deleted</code>. 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public Byte getIsDeleted() {
        return (Byte) get(12);
    }

    /**
     * Setter for <code>polaris-db.book.created_at</code>. 建立時間
     */
    public void setCreatedAt(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>polaris-db.book.created_at</code>. 建立時間
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>polaris-db.book.updated_at</code>. 修改時間
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>polaris-db.book.updated_at</code>. 修改時間
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, Long, String, String, Byte, BigDecimal, String, String, String, LocalDateTime, Byte, Integer, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Long, Long, String, String, Byte, BigDecimal, String, String, String, LocalDateTime, Byte, Integer, Byte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Book.BOOK.ID;
    }

    @Override
    public Field<Long> field2() {
        return Book.BOOK.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Book.BOOK.TITLE;
    }

    @Override
    public Field<String> field4() {
        return Book.BOOK.SUBTITLE;
    }

    @Override
    public Field<Byte> field5() {
        return Book.BOOK.PRICE_TYPE;
    }

    @Override
    public Field<BigDecimal> field6() {
        return Book.BOOK.PRICE;
    }

    @Override
    public Field<String> field7() {
        return Book.BOOK.SYNOPSIS;
    }

    @Override
    public Field<String> field8() {
        return Book.BOOK.ACQUISITION;
    }

    @Override
    public Field<String> field9() {
        return Book.BOOK.COVER;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Book.BOOK.PUBLISHED_AT;
    }

    @Override
    public Field<Byte> field11() {
        return Book.BOOK.STATUS;
    }

    @Override
    public Field<Integer> field12() {
        return Book.BOOK.CHARACTER_COUNT;
    }

    @Override
    public Field<Byte> field13() {
        return Book.BOOK.IS_DELETED;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return Book.BOOK.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return Book.BOOK.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public String component4() {
        return getSubtitle();
    }

    @Override
    public Byte component5() {
        return getPriceType();
    }

    @Override
    public BigDecimal component6() {
        return getPrice();
    }

    @Override
    public String component7() {
        return getSynopsis();
    }

    @Override
    public String component8() {
        return getAcquisition();
    }

    @Override
    public String component9() {
        return getCover();
    }

    @Override
    public LocalDateTime component10() {
        return getPublishedAt();
    }

    @Override
    public Byte component11() {
        return getStatus();
    }

    @Override
    public Integer component12() {
        return getCharacterCount();
    }

    @Override
    public Byte component13() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime component14() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component15() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public String value4() {
        return getSubtitle();
    }

    @Override
    public Byte value5() {
        return getPriceType();
    }

    @Override
    public BigDecimal value6() {
        return getPrice();
    }

    @Override
    public String value7() {
        return getSynopsis();
    }

    @Override
    public String value8() {
        return getAcquisition();
    }

    @Override
    public String value9() {
        return getCover();
    }

    @Override
    public LocalDateTime value10() {
        return getPublishedAt();
    }

    @Override
    public Byte value11() {
        return getStatus();
    }

    @Override
    public Integer value12() {
        return getCharacterCount();
    }

    @Override
    public Byte value13() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime value14() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value15() {
        return getUpdatedAt();
    }

    @Override
    public BookRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BookRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public BookRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookRecord value4(String value) {
        setSubtitle(value);
        return this;
    }

    @Override
    public BookRecord value5(Byte value) {
        setPriceType(value);
        return this;
    }

    @Override
    public BookRecord value6(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public BookRecord value7(String value) {
        setSynopsis(value);
        return this;
    }

    @Override
    public BookRecord value8(String value) {
        setAcquisition(value);
        return this;
    }

    @Override
    public BookRecord value9(String value) {
        setCover(value);
        return this;
    }

    @Override
    public BookRecord value10(LocalDateTime value) {
        setPublishedAt(value);
        return this;
    }

    @Override
    public BookRecord value11(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public BookRecord value12(Integer value) {
        setCharacterCount(value);
        return this;
    }

    @Override
    public BookRecord value13(Byte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public BookRecord value14(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BookRecord value15(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public BookRecord values(Long value1, Long value2, String value3, String value4, Byte value5, BigDecimal value6, String value7, String value8, String value9, LocalDateTime value10, Byte value11, Integer value12, Byte value13, LocalDateTime value14, LocalDateTime value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Long id, Long userId, String title, String subtitle, Byte priceType, BigDecimal price, String synopsis, String acquisition, String cover, LocalDateTime publishedAt, Byte status, Integer characterCount, Byte isDeleted, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Book.BOOK);

        setId(id);
        setUserId(userId);
        setTitle(title);
        setSubtitle(subtitle);
        setPriceType(priceType);
        setPrice(price);
        setSynopsis(synopsis);
        setAcquisition(acquisition);
        setCover(cover);
        setPublishedAt(publishedAt);
        setStatus(status);
        setCharacterCount(characterCount);
        setIsDeleted(isDeleted);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
