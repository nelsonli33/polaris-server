/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables;


import com.bcorp.polaris.core.model.Keys;
import com.bcorp.polaris.core.model.PolarisDb;
import com.bcorp.polaris.core.model.tables.records.FileRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class File extends TableImpl<FileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>polaris-db.file</code>
     */
    public static final File FILE = new File();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FileRecord> getRecordType() {
        return FileRecord.class;
    }

    /**
     * The column <code>polaris-db.file.id</code>.
     */
    public final TableField<FileRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>polaris-db.file.name</code>. 檔案名稱
     */
    public final TableField<FileRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "檔案名稱");

    /**
     * The column <code>polaris-db.file.extension</code>. 檔案 ext
     */
    public final TableField<FileRecord, String> EXTENSION = createField(DSL.name("extension"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "檔案 ext");

    /**
     * The column <code>polaris-db.file.url</code>. 檔案 url
     */
    public final TableField<FileRecord, String> URL = createField(DSL.name("url"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "檔案 url");

    /**
     * The column <code>polaris-db.file.file_size</code>. 檔案大小
     */
    public final TableField<FileRecord, Long> FILE_SIZE = createField(DSL.name("file_size"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "檔案大小");

    /**
     * The column <code>polaris-db.file.width</code>. 圖片寬度
     */
    public final TableField<FileRecord, Integer> WIDTH = createField(DSL.name("width"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "圖片寬度");

    /**
     * The column <code>polaris-db.file.height</code>. 圖片高度
     */
    public final TableField<FileRecord, Integer> HEIGHT = createField(DSL.name("height"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "圖片高度");

    /**
     * The column <code>polaris-db.file.original_filename</code>. 檔案名稱
     */
    public final TableField<FileRecord, String> ORIGINAL_FILENAME = createField(DSL.name("original_filename"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "檔案名稱");

    /**
     * The column <code>polaris-db.file.mime_type</code>. 檔案 mime
     */
    public final TableField<FileRecord, String> MIME_TYPE = createField(DSL.name("mime_type"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "檔案 mime");

    /**
     * The column <code>polaris-db.file.user_id</code>. User id
     */
    public final TableField<FileRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT, this, "User id");

    /**
     * The column <code>polaris-db.file.is_deleted</code>. 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public final TableField<FileRecord, Byte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否刪除，0-未刪除，1-刪除，預設為 0");

    /**
     * The column <code>polaris-db.file.created_at</code>. 建立時間
     */
    public final TableField<FileRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "建立時間");

    /**
     * The column <code>polaris-db.file.updated_at</code>. 修改時間
     */
    public final TableField<FileRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "修改時間");

    private File(Name alias, Table<FileRecord> aliased) {
        this(alias, aliased, null);
    }

    private File(Name alias, Table<FileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>polaris-db.file</code> table reference
     */
    public File(String alias) {
        this(DSL.name(alias), FILE);
    }

    /**
     * Create an aliased <code>polaris-db.file</code> table reference
     */
    public File(Name alias) {
        this(alias, FILE);
    }

    /**
     * Create a <code>polaris-db.file</code> table reference
     */
    public File() {
        this(DSL.name("file"), null);
    }

    public <O extends Record> File(Table<O> child, ForeignKey<O, FileRecord> key) {
        super(child, key, FILE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PolarisDb.POLARIS_DB;
    }

    @Override
    public Identity<FileRecord, Long> getIdentity() {
        return (Identity<FileRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<FileRecord> getPrimaryKey() {
        return Keys.KEY_FILE_PRIMARY;
    }

    @Override
    public File as(String alias) {
        return new File(DSL.name(alias), this);
    }

    @Override
    public File as(Name alias) {
        return new File(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public File rename(String name) {
        return new File(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public File rename(Name name) {
        return new File(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, String, String, String, Long, Integer, Integer, String, String, Long, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
