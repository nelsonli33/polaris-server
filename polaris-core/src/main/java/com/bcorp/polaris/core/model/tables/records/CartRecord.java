/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables.records;


import com.bcorp.polaris.core.model.tables.Cart;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CartRecord extends UpdatableRecordImpl<CartRecord> implements Record8<Long, String, BigDecimal, BigDecimal, BigDecimal, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>polaris-db.cart.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>polaris-db.cart.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>polaris-db.cart.code</code>. 購物車編號
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>polaris-db.cart.code</code>. 購物車編號
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>polaris-db.cart.subtotal</code>. 購物車小計
     */
    public void setSubtotal(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>polaris-db.cart.subtotal</code>. 購物車小計
     */
    public BigDecimal getSubtotal() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>polaris-db.cart.total_price</code>. 購物車總金額
     */
    public void setTotalPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>polaris-db.cart.total_price</code>. 購物車總金額
     */
    public BigDecimal getTotalPrice() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>polaris-db.cart.total_discounts</code>. 購物車總折扣
     */
    public void setTotalDiscounts(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>polaris-db.cart.total_discounts</code>. 購物車總折扣
     */
    public BigDecimal getTotalDiscounts() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>polaris-db.cart.user_id</code>. 使用者 id
     */
    public void setUserId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>polaris-db.cart.user_id</code>. 使用者 id
     */
    public Long getUserId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>polaris-db.cart.created_at</code>. 建立時間
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>polaris-db.cart.created_at</code>. 建立時間
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>polaris-db.cart.updated_at</code>. 修改時間
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>polaris-db.cart.updated_at</code>. 修改時間
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, BigDecimal, BigDecimal, BigDecimal, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, BigDecimal, BigDecimal, BigDecimal, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Cart.CART.ID;
    }

    @Override
    public Field<String> field2() {
        return Cart.CART.CODE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Cart.CART.SUBTOTAL;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Cart.CART.TOTAL_PRICE;
    }

    @Override
    public Field<BigDecimal> field5() {
        return Cart.CART.TOTAL_DISCOUNTS;
    }

    @Override
    public Field<Long> field6() {
        return Cart.CART.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Cart.CART.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Cart.CART.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public BigDecimal component3() {
        return getSubtotal();
    }

    @Override
    public BigDecimal component4() {
        return getTotalPrice();
    }

    @Override
    public BigDecimal component5() {
        return getTotalDiscounts();
    }

    @Override
    public Long component6() {
        return getUserId();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public BigDecimal value3() {
        return getSubtotal();
    }

    @Override
    public BigDecimal value4() {
        return getTotalPrice();
    }

    @Override
    public BigDecimal value5() {
        return getTotalDiscounts();
    }

    @Override
    public Long value6() {
        return getUserId();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public CartRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CartRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public CartRecord value3(BigDecimal value) {
        setSubtotal(value);
        return this;
    }

    @Override
    public CartRecord value4(BigDecimal value) {
        setTotalPrice(value);
        return this;
    }

    @Override
    public CartRecord value5(BigDecimal value) {
        setTotalDiscounts(value);
        return this;
    }

    @Override
    public CartRecord value6(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public CartRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CartRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CartRecord values(Long value1, String value2, BigDecimal value3, BigDecimal value4, BigDecimal value5, Long value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CartRecord
     */
    public CartRecord() {
        super(Cart.CART);
    }

    /**
     * Create a detached, initialised CartRecord
     */
    public CartRecord(Long id, String code, BigDecimal subtotal, BigDecimal totalPrice, BigDecimal totalDiscounts, Long userId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Cart.CART);

        setId(id);
        setCode(code);
        setSubtotal(subtotal);
        setTotalPrice(totalPrice);
        setTotalDiscounts(totalDiscounts);
        setUserId(userId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
