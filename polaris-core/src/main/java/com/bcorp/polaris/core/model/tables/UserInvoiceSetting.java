/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables;


import com.bcorp.polaris.core.model.Keys;
import com.bcorp.polaris.core.model.PolarisDb;
import com.bcorp.polaris.core.model.tables.records.UserInvoiceSettingRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInvoiceSetting extends TableImpl<UserInvoiceSettingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>polaris-db.user_invoice_setting</code>
     */
    public static final UserInvoiceSetting USER_INVOICE_SETTING = new UserInvoiceSetting();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserInvoiceSettingRecord> getRecordType() {
        return UserInvoiceSettingRecord.class;
    }

    /**
     * The column <code>polaris-db.user_invoice_setting.user_id</code>. 使用者 id
     */
    public final TableField<UserInvoiceSettingRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "使用者 id");

    /**
     * The column <code>polaris-db.user_invoice_setting.invoice_type</code>.
     * 發票類型，1-個人，2-公司，3-捐贈
     */
    public final TableField<UserInvoiceSettingRecord, Byte> INVOICE_TYPE = createField(DSL.name("invoice_type"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "發票類型，1-個人，2-公司，3-捐贈");

    /**
     * The column <code>polaris-db.user_invoice_setting.contact_email</code>.
     */
    public final TableField<UserInvoiceSettingRecord, String> CONTACT_EMAIL = createField(DSL.name("contact_email"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>polaris-db.user_invoice_setting.invoice_title</code>.
     */
    public final TableField<UserInvoiceSettingRecord, String> INVOICE_TITLE = createField(DSL.name("invoice_title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>polaris-db.user_invoice_setting.business_number</code>.
     */
    public final TableField<UserInvoiceSettingRecord, String> BUSINESS_NUMBER = createField(DSL.name("business_number"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>polaris-db.user_invoice_setting.lovecode</code>.
     */
    public final TableField<UserInvoiceSettingRecord, String> LOVECODE = createField(DSL.name("lovecode"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>polaris-db.user_invoice_setting.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public final TableField<UserInvoiceSettingRecord, Byte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否刪除，0-未刪除，1-刪除，預設為 0");

    /**
     * The column <code>polaris-db.user_invoice_setting.created_at</code>. 建立時間
     */
    public final TableField<UserInvoiceSettingRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "建立時間");

    /**
     * The column <code>polaris-db.user_invoice_setting.updated_at</code>. 修改時間
     */
    public final TableField<UserInvoiceSettingRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "修改時間");

    private UserInvoiceSetting(Name alias, Table<UserInvoiceSettingRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserInvoiceSetting(Name alias, Table<UserInvoiceSettingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>polaris-db.user_invoice_setting</code> table
     * reference
     */
    public UserInvoiceSetting(String alias) {
        this(DSL.name(alias), USER_INVOICE_SETTING);
    }

    /**
     * Create an aliased <code>polaris-db.user_invoice_setting</code> table
     * reference
     */
    public UserInvoiceSetting(Name alias) {
        this(alias, USER_INVOICE_SETTING);
    }

    /**
     * Create a <code>polaris-db.user_invoice_setting</code> table reference
     */
    public UserInvoiceSetting() {
        this(DSL.name("user_invoice_setting"), null);
    }

    public <O extends Record> UserInvoiceSetting(Table<O> child, ForeignKey<O, UserInvoiceSettingRecord> key) {
        super(child, key, USER_INVOICE_SETTING);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PolarisDb.POLARIS_DB;
    }

    @Override
    public UniqueKey<UserInvoiceSettingRecord> getPrimaryKey() {
        return Keys.KEY_USER_INVOICE_SETTING_PRIMARY;
    }

    @Override
    public UserInvoiceSetting as(String alias) {
        return new UserInvoiceSetting(DSL.name(alias), this);
    }

    @Override
    public UserInvoiceSetting as(Name alias) {
        return new UserInvoiceSetting(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserInvoiceSetting rename(String name) {
        return new UserInvoiceSetting(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserInvoiceSetting rename(Name name) {
        return new UserInvoiceSetting(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Byte, String, String, String, String, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
