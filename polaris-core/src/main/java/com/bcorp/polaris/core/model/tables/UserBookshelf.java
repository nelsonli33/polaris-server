/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables;


import com.bcorp.polaris.core.model.Keys;
import com.bcorp.polaris.core.model.PolarisDb;
import com.bcorp.polaris.core.model.tables.records.UserBookshelfRecord;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserBookshelf extends TableImpl<UserBookshelfRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>polaris-db.user_bookshelf</code>
     */
    public static final UserBookshelf USER_BOOKSHELF = new UserBookshelf();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserBookshelfRecord> getRecordType() {
        return UserBookshelfRecord.class;
    }

    /**
     * The column <code>polaris-db.user_bookshelf.id</code>.
     */
    public final TableField<UserBookshelfRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>polaris-db.user_bookshelf.user_id</code>. 使用者 id
     */
    public final TableField<UserBookshelfRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "使用者 id");

    /**
     * The column <code>polaris-db.user_bookshelf.book_id</code>. 書本 id
     */
    public final TableField<UserBookshelfRecord, Long> BOOK_ID = createField(DSL.name("book_id"), SQLDataType.BIGINT.nullable(false), this, "書本 id");

    /**
     * The column <code>polaris-db.user_bookshelf.last_page_id</code>. 上次閱讀 page
     * id
     */
    public final TableField<UserBookshelfRecord, Long> LAST_PAGE_ID = createField(DSL.name("last_page_id"), SQLDataType.BIGINT.nullable(false), this, "上次閱讀 page id");

    /**
     * The column <code>polaris-db.user_bookshelf.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public final TableField<UserBookshelfRecord, Byte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "是否刪除，0-未刪除，1-刪除，預設為 0");

    /**
     * The column <code>polaris-db.user_bookshelf.created_at</code>. 建立時間
     */
    public final TableField<UserBookshelfRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "建立時間");

    /**
     * The column <code>polaris-db.user_bookshelf.updated_at</code>. 修改時間
     */
    public final TableField<UserBookshelfRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "修改時間");

    private UserBookshelf(Name alias, Table<UserBookshelfRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserBookshelf(Name alias, Table<UserBookshelfRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>polaris-db.user_bookshelf</code> table reference
     */
    public UserBookshelf(String alias) {
        this(DSL.name(alias), USER_BOOKSHELF);
    }

    /**
     * Create an aliased <code>polaris-db.user_bookshelf</code> table reference
     */
    public UserBookshelf(Name alias) {
        this(alias, USER_BOOKSHELF);
    }

    /**
     * Create a <code>polaris-db.user_bookshelf</code> table reference
     */
    public UserBookshelf() {
        this(DSL.name("user_bookshelf"), null);
    }

    public <O extends Record> UserBookshelf(Table<O> child, ForeignKey<O, UserBookshelfRecord> key) {
        super(child, key, USER_BOOKSHELF);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PolarisDb.POLARIS_DB;
    }

    @Override
    public Identity<UserBookshelfRecord, Long> getIdentity() {
        return (Identity<UserBookshelfRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<UserBookshelfRecord> getPrimaryKey() {
        return Keys.KEY_USER_BOOKSHELF_PRIMARY;
    }

    @Override
    public UserBookshelf as(String alias) {
        return new UserBookshelf(DSL.name(alias), this);
    }

    @Override
    public UserBookshelf as(Name alias) {
        return new UserBookshelf(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserBookshelf rename(String name) {
        return new UserBookshelf(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserBookshelf rename(Name name) {
        return new UserBookshelf(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Long, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
