/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables;


import com.bcorp.polaris.core.model.Keys;
import com.bcorp.polaris.core.model.PolarisDb;
import com.bcorp.polaris.core.model.tables.records.PageRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Page extends TableImpl<PageRecord>
{

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>polaris-db.page</code>
     */
    public static final Page PAGE = new Page();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PageRecord> getRecordType()
    {
        return PageRecord.class;
    }

    /**
     * The column <code>polaris-db.page.id</code>.
     */
    public final TableField<PageRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>polaris-db.page.chapter_id</code>. 章節 id
     */
    public final TableField<PageRecord, ULong> CHAPTER_ID = createField(DSL.name("chapter_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "章節 id");

    /**
     * The column <code>polaris-db.page.title</code>. 頁面標題
     */
    public final TableField<PageRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "頁面標題");

    /**
     * The column <code>polaris-db.page.body</code>. 頁面內容
     */
    public final TableField<PageRecord, String> BODY = createField(DSL.name("body"), SQLDataType.CLOB, this, "頁面內容");

    /**
     * The column <code>polaris-db.page.character_count</code>. 字數
     */
    public final TableField<PageRecord, Integer> CHARACTER_COUNT = createField(DSL.name("character_count"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "字數");

    /**
     * The column <code>polaris-db.page.sort_position</code>. 排序位置
     */
    public final TableField<PageRecord, Integer> SORT_POSITION = createField(DSL.name("sort_position"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "排序位置");

    /**
     * The column <code>polaris-db.page.is_deleted</code>. 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public final TableField<PageRecord, UByte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "是否刪除，0-未刪除，1-刪除，預設為 0");

    /**
     * The column <code>polaris-db.page.created_at</code>. 建立時間
     */
    public final TableField<PageRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "建立時間");

    /**
     * The column <code>polaris-db.page.updated_at</code>. 修改時間
     */
    public final TableField<PageRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "修改時間");

    private Page(Name alias, Table<PageRecord> aliased)
    {
        this(alias, aliased, null);
    }

    private Page(Name alias, Table<PageRecord> aliased, Field<?>[] parameters)
    {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>polaris-db.page</code> table reference
     */
    public Page(String alias)
    {
        this(DSL.name(alias), PAGE);
    }

    /**
     * Create an aliased <code>polaris-db.page</code> table reference
     */
    public Page(Name alias)
    {
        this(alias, PAGE);
    }

    /**
     * Create a <code>polaris-db.page</code> table reference
     */
    public Page()
    {
        this(DSL.name("page"), null);
    }

    public <O extends Record> Page(Table<O> child, ForeignKey<O, PageRecord> key)
    {
        super(child, key, PAGE);
    }

    @Override
    public Schema getSchema()
    {
        return aliased() ? null : PolarisDb.POLARIS_DB;
    }

    @Override
    public Identity<PageRecord, ULong> getIdentity()
    {
        return (Identity<PageRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<PageRecord> getPrimaryKey()
    {
        return Keys.KEY_PAGE_PRIMARY;
    }

    @Override
    public Page as(String alias)
    {
        return new Page(DSL.name(alias), this);
    }

    @Override
    public Page as(Name alias)
    {
        return new Page(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Page rename(String name)
    {
        return new Page(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Page rename(Name name)
    {
        return new Page(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<ULong, ULong, String, String, Integer, Integer, UByte, LocalDateTime, LocalDateTime> fieldsRow()
    {
        return (Row9) super.fieldsRow();
    }
}
