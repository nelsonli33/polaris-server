/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables.records;


import com.bcorp.polaris.core.model.tables.User;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record20<Long, String, String, String, String, String, String, String, LocalDate, Byte, String, String, String, String, String, Byte, Byte, Byte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>polaris-db.user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>polaris-db.user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>polaris-db.user.name</code>. 使用者名稱
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>polaris-db.user.name</code>. 使用者名稱
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>polaris-db.user.uid</code>. 使用者 Uid
     */
    public void setUid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>polaris-db.user.uid</code>. 使用者 Uid
     */
    public String getUid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>polaris-db.user.password</code>. 使用者密碼
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>polaris-db.user.password</code>. 使用者密碼
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>polaris-db.user.email</code>. 使用者 E-mail
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>polaris-db.user.email</code>. 使用者 E-mail
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>polaris-db.user.avatar</code>. 使用者頭像
     */
    public void setAvatar(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>polaris-db.user.avatar</code>. 使用者頭像
     */
    public String getAvatar() {
        return (String) get(5);
    }

    /**
     * Setter for <code>polaris-db.user.short_bio</code>. 使用者簡短介紹
     */
    public void setShortBio(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>polaris-db.user.short_bio</code>. 使用者簡短介紹
     */
    public String getShortBio() {
        return (String) get(6);
    }

    /**
     * Setter for <code>polaris-db.user.full_bio</code>. 使用者完整介紹
     */
    public void setFullBio(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>polaris-db.user.full_bio</code>. 使用者完整介紹
     */
    public String getFullBio() {
        return (String) get(7);
    }

    /**
     * Setter for <code>polaris-db.user.birthday</code>. 使用者生日
     */
    public void setBirthday(LocalDate value) {
        set(8, value);
    }

    /**
     * Getter for <code>polaris-db.user.birthday</code>. 使用者生日
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for <code>polaris-db.user.is_author</code>. 是否是作者，0-否，1-是，預設為 0
     */
    public void setIsAuthor(Byte value) {
        set(9, value);
    }

    /**
     * Getter for <code>polaris-db.user.is_author</code>. 是否是作者，0-否，1-是，預設為 0
     */
    public Byte getIsAuthor() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>polaris-db.user.twitter</code>.
     */
    public void setTwitter(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>polaris-db.user.twitter</code>.
     */
    public String getTwitter() {
        return (String) get(10);
    }

    /**
     * Setter for <code>polaris-db.user.github</code>.
     */
    public void setGithub(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>polaris-db.user.github</code>.
     */
    public String getGithub() {
        return (String) get(11);
    }

    /**
     * Setter for <code>polaris-db.user.linkedin</code>.
     */
    public void setLinkedin(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>polaris-db.user.linkedin</code>.
     */
    public String getLinkedin() {
        return (String) get(12);
    }

    /**
     * Setter for <code>polaris-db.user.facebook</code>.
     */
    public void setFacebook(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>polaris-db.user.facebook</code>.
     */
    public String getFacebook() {
        return (String) get(13);
    }

    /**
     * Setter for <code>polaris-db.user.default_payment_mode</code>. 付款方式
     */
    public void setDefaultPaymentMode(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>polaris-db.user.default_payment_mode</code>. 付款方式
     */
    public String getDefaultPaymentMode() {
        return (String) get(14);
    }

    /**
     * Setter for <code>polaris-db.user.default_invoice_type</code>.
     * 發票類型，1-個人，2-公司，3-捐贈
     */
    public void setDefaultInvoiceType(Byte value) {
        set(15, value);
    }

    /**
     * Getter for <code>polaris-db.user.default_invoice_type</code>.
     * 發票類型，1-個人，2-公司，3-捐贈
     */
    public Byte getDefaultInvoiceType() {
        return (Byte) get(15);
    }

    /**
     * Setter for <code>polaris-db.user.is_blocked</code>. 是否停權，0-否，1-是，預設為 0
     */
    public void setIsBlocked(Byte value) {
        set(16, value);
    }

    /**
     * Getter for <code>polaris-db.user.is_blocked</code>. 是否停權，0-否，1-是，預設為 0
     */
    public Byte getIsBlocked() {
        return (Byte) get(16);
    }

    /**
     * Setter for <code>polaris-db.user.is_deleted</code>. 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public void setIsDeleted(Byte value) {
        set(17, value);
    }

    /**
     * Getter for <code>polaris-db.user.is_deleted</code>. 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public Byte getIsDeleted() {
        return (Byte) get(17);
    }

    /**
     * Setter for <code>polaris-db.user.created_at</code>. 建立時間
     */
    public void setCreatedAt(LocalDateTime value) {
        set(18, value);
    }

    /**
     * Getter for <code>polaris-db.user.created_at</code>. 建立時間
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>polaris-db.user.updated_at</code>. 修改時間
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(19, value);
    }

    /**
     * Getter for <code>polaris-db.user.updated_at</code>. 修改時間
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<Long, String, String, String, String, String, String, String, LocalDate, Byte, String, String, String, String, String, Byte, Byte, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<Long, String, String, String, String, String, String, String, LocalDate, Byte, String, String, String, String, String, Byte, Byte, Byte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.UID;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field6() {
        return User.USER.AVATAR;
    }

    @Override
    public Field<String> field7() {
        return User.USER.SHORT_BIO;
    }

    @Override
    public Field<String> field8() {
        return User.USER.FULL_BIO;
    }

    @Override
    public Field<LocalDate> field9() {
        return User.USER.BIRTHDAY;
    }

    @Override
    public Field<Byte> field10() {
        return User.USER.IS_AUTHOR;
    }

    @Override
    public Field<String> field11() {
        return User.USER.TWITTER;
    }

    @Override
    public Field<String> field12() {
        return User.USER.GITHUB;
    }

    @Override
    public Field<String> field13() {
        return User.USER.LINKEDIN;
    }

    @Override
    public Field<String> field14() {
        return User.USER.FACEBOOK;
    }

    @Override
    public Field<String> field15() {
        return User.USER.DEFAULT_PAYMENT_MODE;
    }

    @Override
    public Field<Byte> field16() {
        return User.USER.DEFAULT_INVOICE_TYPE;
    }

    @Override
    public Field<Byte> field17() {
        return User.USER.IS_BLOCKED;
    }

    @Override
    public Field<Byte> field18() {
        return User.USER.IS_DELETED;
    }

    @Override
    public Field<LocalDateTime> field19() {
        return User.USER.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field20() {
        return User.USER.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getUid();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public String component6() {
        return getAvatar();
    }

    @Override
    public String component7() {
        return getShortBio();
    }

    @Override
    public String component8() {
        return getFullBio();
    }

    @Override
    public LocalDate component9() {
        return getBirthday();
    }

    @Override
    public Byte component10() {
        return getIsAuthor();
    }

    @Override
    public String component11() {
        return getTwitter();
    }

    @Override
    public String component12() {
        return getGithub();
    }

    @Override
    public String component13() {
        return getLinkedin();
    }

    @Override
    public String component14() {
        return getFacebook();
    }

    @Override
    public String component15() {
        return getDefaultPaymentMode();
    }

    @Override
    public Byte component16() {
        return getDefaultInvoiceType();
    }

    @Override
    public Byte component17() {
        return getIsBlocked();
    }

    @Override
    public Byte component18() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime component19() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component20() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getUid();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public String value6() {
        return getAvatar();
    }

    @Override
    public String value7() {
        return getShortBio();
    }

    @Override
    public String value8() {
        return getFullBio();
    }

    @Override
    public LocalDate value9() {
        return getBirthday();
    }

    @Override
    public Byte value10() {
        return getIsAuthor();
    }

    @Override
    public String value11() {
        return getTwitter();
    }

    @Override
    public String value12() {
        return getGithub();
    }

    @Override
    public String value13() {
        return getLinkedin();
    }

    @Override
    public String value14() {
        return getFacebook();
    }

    @Override
    public String value15() {
        return getDefaultPaymentMode();
    }

    @Override
    public Byte value16() {
        return getDefaultInvoiceType();
    }

    @Override
    public Byte value17() {
        return getIsBlocked();
    }

    @Override
    public Byte value18() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime value19() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value20() {
        return getUpdatedAt();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setUid(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setAvatar(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setShortBio(value);
        return this;
    }

    @Override
    public UserRecord value8(String value) {
        setFullBio(value);
        return this;
    }

    @Override
    public UserRecord value9(LocalDate value) {
        setBirthday(value);
        return this;
    }

    @Override
    public UserRecord value10(Byte value) {
        setIsAuthor(value);
        return this;
    }

    @Override
    public UserRecord value11(String value) {
        setTwitter(value);
        return this;
    }

    @Override
    public UserRecord value12(String value) {
        setGithub(value);
        return this;
    }

    @Override
    public UserRecord value13(String value) {
        setLinkedin(value);
        return this;
    }

    @Override
    public UserRecord value14(String value) {
        setFacebook(value);
        return this;
    }

    @Override
    public UserRecord value15(String value) {
        setDefaultPaymentMode(value);
        return this;
    }

    @Override
    public UserRecord value16(Byte value) {
        setDefaultInvoiceType(value);
        return this;
    }

    @Override
    public UserRecord value17(Byte value) {
        setIsBlocked(value);
        return this;
    }

    @Override
    public UserRecord value18(Byte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public UserRecord value19(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserRecord value20(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, LocalDate value9, Byte value10, String value11, String value12, String value13, String value14, String value15, Byte value16, Byte value17, Byte value18, LocalDateTime value19, LocalDateTime value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String name, String uid, String password, String email, String avatar, String shortBio, String fullBio, LocalDate birthday, Byte isAuthor, String twitter, String github, String linkedin, String facebook, String defaultPaymentMode, Byte defaultInvoiceType, Byte isBlocked, Byte isDeleted, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(User.USER);

        setId(id);
        setName(name);
        setUid(uid);
        setPassword(password);
        setEmail(email);
        setAvatar(avatar);
        setShortBio(shortBio);
        setFullBio(fullBio);
        setBirthday(birthday);
        setIsAuthor(isAuthor);
        setTwitter(twitter);
        setGithub(github);
        setLinkedin(linkedin);
        setFacebook(facebook);
        setDefaultPaymentMode(defaultPaymentMode);
        setDefaultInvoiceType(defaultInvoiceType);
        setIsBlocked(isBlocked);
        setIsDeleted(isDeleted);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
