/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables;


import com.bcorp.polaris.core.model.Keys;
import com.bcorp.polaris.core.model.PolarisDb;
import com.bcorp.polaris.core.model.tables.records.PaymentModeRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PaymentMode extends TableImpl<PaymentModeRecord>
{

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>polaris-db.payment_mode</code>
     */
    public static final PaymentMode PAYMENT_MODE = new PaymentMode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentModeRecord> getRecordType()
    {
        return PaymentModeRecord.class;
    }

    /**
     * The column <code>polaris-db.payment_mode.id</code>.
     */
    public final TableField<PaymentModeRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>polaris-db.payment_mode.code</code>. 付款識別子
     */
    public final TableField<PaymentModeRecord, String> CODE = createField(DSL.name("code"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "付款識別子");

    /**
     * The column <code>polaris-db.payment_mode.description</code>. 付款方式描述
     */
    public final TableField<PaymentModeRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "付款方式描述");

    /**
     * The column <code>polaris-db.payment_mode.is_active</code>.
     * 是否啟用，0-未啟用，1-啟用，預設為 1
     */
    public final TableField<PaymentModeRecord, UByte> IS_ACTIVE = createField(DSL.name("is_active"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINTUNSIGNED)), this, "是否啟用，0-未啟用，1-啟用，預設為 1");

    /**
     * The column <code>polaris-db.payment_mode.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public final TableField<PaymentModeRecord, UByte> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.TINYINTUNSIGNED.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINTUNSIGNED)), this, "是否刪除，0-未刪除，1-刪除，預設為 0");

    /**
     * The column <code>polaris-db.payment_mode.created_at</code>. 建立時間
     */
    public final TableField<PaymentModeRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "建立時間");

    /**
     * The column <code>polaris-db.payment_mode.updated_at</code>. 修改時間
     */
    public final TableField<PaymentModeRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false), this, "修改時間");

    private PaymentMode(Name alias, Table<PaymentModeRecord> aliased)
    {
        this(alias, aliased, null);
    }

    private PaymentMode(Name alias, Table<PaymentModeRecord> aliased, Field<?>[] parameters)
    {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>polaris-db.payment_mode</code> table reference
     */
    public PaymentMode(String alias)
    {
        this(DSL.name(alias), PAYMENT_MODE);
    }

    /**
     * Create an aliased <code>polaris-db.payment_mode</code> table reference
     */
    public PaymentMode(Name alias)
    {
        this(alias, PAYMENT_MODE);
    }

    /**
     * Create a <code>polaris-db.payment_mode</code> table reference
     */
    public PaymentMode()
    {
        this(DSL.name("payment_mode"), null);
    }

    public <O extends Record> PaymentMode(Table<O> child, ForeignKey<O, PaymentModeRecord> key)
    {
        super(child, key, PAYMENT_MODE);
    }

    @Override
    public Schema getSchema()
    {
        return aliased() ? null : PolarisDb.POLARIS_DB;
    }

    @Override
    public Identity<PaymentModeRecord, ULong> getIdentity()
    {
        return (Identity<PaymentModeRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<PaymentModeRecord> getPrimaryKey()
    {
        return Keys.KEY_PAYMENT_MODE_PRIMARY;
    }

    @Override
    public List<UniqueKey<PaymentModeRecord>> getUniqueKeys()
    {
        return Arrays.asList(Keys.KEY_PAYMENT_MODE_UK_PAYMENT_MODE_CODE);
    }

    @Override
    public PaymentMode as(String alias)
    {
        return new PaymentMode(DSL.name(alias), this);
    }

    @Override
    public PaymentMode as(Name alias)
    {
        return new PaymentMode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentMode rename(String name)
    {
        return new PaymentMode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentMode rename(Name name)
    {
        return new PaymentMode(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, String, String, UByte, UByte, LocalDateTime, LocalDateTime> fieldsRow()
    {
        return (Row7) super.fieldsRow();
    }
}
