/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables.records;


import com.bcorp.polaris.core.model.tables.Page;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PageRecord extends UpdatableRecordImpl<PageRecord> implements Record11<Long, Long, Long, Long, String, String, Integer, Integer, Byte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>polaris-db.page.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>polaris-db.page.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>polaris-db.page.chapter_id</code>. 章節 id
     */
    public void setChapterId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>polaris-db.page.chapter_id</code>. 章節 id
     */
    public Long getChapterId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>polaris-db.page.book_id</code>. 書本 id
     */
    public void setBookId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>polaris-db.page.book_id</code>. 書本 id
     */
    public Long getBookId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>polaris-db.page.user_id</code>. User(Author) id
     */
    public void setUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>polaris-db.page.user_id</code>. User(Author) id
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>polaris-db.page.title</code>. 頁面標題
     */
    public void setTitle(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>polaris-db.page.title</code>. 頁面標題
     */
    public String getTitle() {
        return (String) get(4);
    }

    /**
     * Setter for <code>polaris-db.page.body</code>. 頁面內容
     */
    public void setBody(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>polaris-db.page.body</code>. 頁面內容
     */
    public String getBody() {
        return (String) get(5);
    }

    /**
     * Setter for <code>polaris-db.page.character_count</code>. 字數
     */
    public void setCharacterCount(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>polaris-db.page.character_count</code>. 字數
     */
    public Integer getCharacterCount() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>polaris-db.page.sort_position</code>. 排序位置
     */
    public void setSortPosition(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>polaris-db.page.sort_position</code>. 排序位置
     */
    public Integer getSortPosition() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>polaris-db.page.is_deleted</code>. 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public void setIsDeleted(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>polaris-db.page.is_deleted</code>. 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public Byte getIsDeleted() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>polaris-db.page.created_at</code>. 建立時間
     */
    public void setCreatedAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>polaris-db.page.created_at</code>. 建立時間
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>polaris-db.page.updated_at</code>. 修改時間
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>polaris-db.page.updated_at</code>. 修改時間
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, Long, Long, String, String, Integer, Integer, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, Long, Long, String, String, Integer, Integer, Byte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Page.PAGE.ID;
    }

    @Override
    public Field<Long> field2() {
        return Page.PAGE.CHAPTER_ID;
    }

    @Override
    public Field<Long> field3() {
        return Page.PAGE.BOOK_ID;
    }

    @Override
    public Field<Long> field4() {
        return Page.PAGE.USER_ID;
    }

    @Override
    public Field<String> field5() {
        return Page.PAGE.TITLE;
    }

    @Override
    public Field<String> field6() {
        return Page.PAGE.BODY;
    }

    @Override
    public Field<Integer> field7() {
        return Page.PAGE.CHARACTER_COUNT;
    }

    @Override
    public Field<Integer> field8() {
        return Page.PAGE.SORT_POSITION;
    }

    @Override
    public Field<Byte> field9() {
        return Page.PAGE.IS_DELETED;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Page.PAGE.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Page.PAGE.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getChapterId();
    }

    @Override
    public Long component3() {
        return getBookId();
    }

    @Override
    public Long component4() {
        return getUserId();
    }

    @Override
    public String component5() {
        return getTitle();
    }

    @Override
    public String component6() {
        return getBody();
    }

    @Override
    public Integer component7() {
        return getCharacterCount();
    }

    @Override
    public Integer component8() {
        return getSortPosition();
    }

    @Override
    public Byte component9() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime component10() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component11() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getChapterId();
    }

    @Override
    public Long value3() {
        return getBookId();
    }

    @Override
    public Long value4() {
        return getUserId();
    }

    @Override
    public String value5() {
        return getTitle();
    }

    @Override
    public String value6() {
        return getBody();
    }

    @Override
    public Integer value7() {
        return getCharacterCount();
    }

    @Override
    public Integer value8() {
        return getSortPosition();
    }

    @Override
    public Byte value9() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime value10() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value11() {
        return getUpdatedAt();
    }

    @Override
    public PageRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PageRecord value2(Long value) {
        setChapterId(value);
        return this;
    }

    @Override
    public PageRecord value3(Long value) {
        setBookId(value);
        return this;
    }

    @Override
    public PageRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public PageRecord value5(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public PageRecord value6(String value) {
        setBody(value);
        return this;
    }

    @Override
    public PageRecord value7(Integer value) {
        setCharacterCount(value);
        return this;
    }

    @Override
    public PageRecord value8(Integer value) {
        setSortPosition(value);
        return this;
    }

    @Override
    public PageRecord value9(Byte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public PageRecord value10(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PageRecord value11(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PageRecord values(Long value1, Long value2, Long value3, Long value4, String value5, String value6, Integer value7, Integer value8, Byte value9, LocalDateTime value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PageRecord
     */
    public PageRecord() {
        super(Page.PAGE);
    }

    /**
     * Create a detached, initialised PageRecord
     */
    public PageRecord(Long id, Long chapterId, Long bookId, Long userId, String title, String body, Integer characterCount, Integer sortPosition, Byte isDeleted, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Page.PAGE);

        setId(id);
        setChapterId(chapterId);
        setBookId(bookId);
        setUserId(userId);
        setTitle(title);
        setBody(body);
        setCharacterCount(characterCount);
        setSortPosition(sortPosition);
        setIsDeleted(isDeleted);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
