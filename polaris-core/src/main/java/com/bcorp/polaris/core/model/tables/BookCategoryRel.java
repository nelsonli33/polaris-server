/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.core.model.tables;


import com.bcorp.polaris.core.model.Keys;
import com.bcorp.polaris.core.model.PolarisDb;
import com.bcorp.polaris.core.model.tables.records.BookCategoryRelRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookCategoryRel extends TableImpl<BookCategoryRelRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>polaris-db.book_category_rel</code>
     */
    public static final BookCategoryRel BOOK_CATEGORY_REL = new BookCategoryRel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookCategoryRelRecord> getRecordType() {
        return BookCategoryRelRecord.class;
    }

    /**
     * The column <code>polaris-db.book_category_rel.id</code>.
     */
    public final TableField<BookCategoryRelRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>polaris-db.book_category_rel.book_id</code>.
     */
    public final TableField<BookCategoryRelRecord, Long> BOOK_ID = createField(DSL.name("book_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>polaris-db.book_category_rel.book_category_id</code>.
     */
    public final TableField<BookCategoryRelRecord, Long> BOOK_CATEGORY_ID = createField(DSL.name("book_category_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private BookCategoryRel(Name alias, Table<BookCategoryRelRecord> aliased) {
        this(alias, aliased, null);
    }

    private BookCategoryRel(Name alias, Table<BookCategoryRelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>polaris-db.book_category_rel</code> table
     * reference
     */
    public BookCategoryRel(String alias) {
        this(DSL.name(alias), BOOK_CATEGORY_REL);
    }

    /**
     * Create an aliased <code>polaris-db.book_category_rel</code> table
     * reference
     */
    public BookCategoryRel(Name alias) {
        this(alias, BOOK_CATEGORY_REL);
    }

    /**
     * Create a <code>polaris-db.book_category_rel</code> table reference
     */
    public BookCategoryRel() {
        this(DSL.name("book_category_rel"), null);
    }

    public <O extends Record> BookCategoryRel(Table<O> child, ForeignKey<O, BookCategoryRelRecord> key) {
        super(child, key, BOOK_CATEGORY_REL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PolarisDb.POLARIS_DB;
    }

    @Override
    public Identity<BookCategoryRelRecord, Long> getIdentity() {
        return (Identity<BookCategoryRelRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<BookCategoryRelRecord> getPrimaryKey() {
        return Keys.KEY_BOOK_CATEGORY_REL_PRIMARY;
    }

    @Override
    public BookCategoryRel as(String alias) {
        return new BookCategoryRel(DSL.name(alias), this);
    }

    @Override
    public BookCategoryRel as(Name alias) {
        return new BookCategoryRel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BookCategoryRel rename(String name) {
        return new BookCategoryRel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BookCategoryRel rename(Name name) {
        return new BookCategoryRel(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
