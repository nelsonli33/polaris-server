/*
 * This file is generated by jOOQ.
 */
package com.bcorp.polaris.model.tables.records;


import com.bcorp.polaris.model.tables.Chapter;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChapterRecord extends UpdatableRecordImpl<ChapterRecord> implements Record7<ULong, ULong, String, Integer, UByte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>polaris-db.chapter.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>polaris-db.chapter.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>polaris-db.chapter.book_id</code>. 書本 id
     */
    public void setBookId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>polaris-db.chapter.book_id</code>. 書本 id
     */
    public ULong getBookId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>polaris-db.chapter.title</code>. 章節名稱
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>polaris-db.chapter.title</code>. 章節名稱
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>polaris-db.chapter.sort_position</code>. 排序位置
     */
    public void setSortPosition(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>polaris-db.chapter.sort_position</code>. 排序位置
     */
    public Integer getSortPosition() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>polaris-db.chapter.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public void setIsDeleted(UByte value) {
        set(4, value);
    }

    /**
     * Getter for <code>polaris-db.chapter.is_deleted</code>.
     * 是否刪除，0-未刪除，1-刪除，預設為 0
     */
    public UByte getIsDeleted() {
        return (UByte) get(4);
    }

    /**
     * Setter for <code>polaris-db.chapter.created_at</code>. 建立時間
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>polaris-db.chapter.created_at</code>. 建立時間
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>polaris-db.chapter.updated_at</code>. 修改時間
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>polaris-db.chapter.updated_at</code>. 修改時間
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, ULong, String, Integer, UByte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, ULong, String, Integer, UByte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Chapter.CHAPTER.ID;
    }

    @Override
    public Field<ULong> field2() {
        return Chapter.CHAPTER.BOOK_ID;
    }

    @Override
    public Field<String> field3() {
        return Chapter.CHAPTER.TITLE;
    }

    @Override
    public Field<Integer> field4() {
        return Chapter.CHAPTER.SORT_POSITION;
    }

    @Override
    public Field<UByte> field5() {
        return Chapter.CHAPTER.IS_DELETED;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Chapter.CHAPTER.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Chapter.CHAPTER.UPDATED_AT;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public ULong component2() {
        return getBookId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public Integer component4() {
        return getSortPosition();
    }

    @Override
    public UByte component5() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public ULong value2() {
        return getBookId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public Integer value4() {
        return getSortPosition();
    }

    @Override
    public UByte value5() {
        return getIsDeleted();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public ChapterRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public ChapterRecord value2(ULong value) {
        setBookId(value);
        return this;
    }

    @Override
    public ChapterRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public ChapterRecord value4(Integer value) {
        setSortPosition(value);
        return this;
    }

    @Override
    public ChapterRecord value5(UByte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public ChapterRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ChapterRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ChapterRecord values(ULong value1, ULong value2, String value3, Integer value4, UByte value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChapterRecord
     */
    public ChapterRecord() {
        super(Chapter.CHAPTER);
    }

    /**
     * Create a detached, initialised ChapterRecord
     */
    public ChapterRecord(ULong id, ULong bookId, String title, Integer sortPosition, UByte isDeleted, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Chapter.CHAPTER);

        setId(id);
        setBookId(bookId);
        setTitle(title);
        setSortPosition(sortPosition);
        setIsDeleted(isDeleted);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
